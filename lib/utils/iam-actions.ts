export const actions = {
	cloudFormation: {
		read: [
			'cloudformation:DescribeStackEvents',
			'cloudformation:DescribeStackResources',
			'cloudformation:DescribeStacks',
			'cloudformation:GetTemplate',
			'cloudformation:ListStacks',
			'cloudformation:ListStackResources',
		],
		write: [
			'cloudformation:CreateStack',
			'cloudformation:DeleteStack',
			'cloudformation:ExecuteChangeSet',
			'cloudformation:UpdateStack',
			'cloudformation:ValidateTemplate',
		],
	},
	cloudWatch: {
		read: [
			'cloudwatch:DescribeAlarms',
			'cloudwatch:GetMetricData',
			'cloudwatch:ListMetrics',
			'logs:DescribeLogGroups',
			'logs:DescribeLogStreams',
			'logs:FilterLogEvents',
			'logs:GetLogEvents',
		],
		write: [
			'cloudwatch:CreateDashboards',
			'cloudwatch:DeleteAlarms',
			'cloudwatch:DeleteDashboards',
			'cloudwatch:PutDashboard',
			'cloudwatch:PutMetricAlarm',
		],
	},
	dynamoDb: {
		read: [
			'dynamodb:BatchGetItem',
			'dynamodb:DescribeTable',
			'dynamodb:GetItem',
			'dynamodb:ListTables',
			'dynamodb:Query',
			'dynamodb:Scan',
		],
		write: ['dynamodb:PutItem', 'dynamodb:UpdateItem', 'dynamodb:DeleteItem'],
	},
	iam: {
		read: [
			'iam:GetGroup',
			'iam:GetGroupPolicy',
			'iam:GetLoginProfile',
			'iam:GetPolicy',
			'iam:GetPolicyVersion',
			'iam:GetRole',
			'iam:GetRolePolicy',
			'iam:GetUser',
			'iam:ListAttachedGroupPolicies',
			'iam:ListAttachedRolePolicies',
			'iam:ListGroupPolicies',
			'iam:ListGroups',
			'iam:ListGroupsForUser',
			'iam:ListPolicies',
			'iam:ListPolicyVersions',
			'iam:ListRolePolicies',
			'iam:ListRoles',
			'iam:ListUsers',
		],
		write: [
			'iam:AddUserToGroup',
			'iam:AttachGroupPolicy',
			'iam:CreateGroup',
			'iam:CreateUser',
			'iam:DeleteGroup',
			'iam:DeleteGroupPolicy',
			'iam:DeleteUser',
			'iam:DetachGroupPolicy',
			'iam:PutGroupPolicy',
			'iam:RemoveUserFromGroup',
			'iam:UpdateGroup',
			'iam:UpdateUser',
		],
	},
	s3: {
		read: [
			's3:GetObject',
			's3:ListBucket',
			's3:GetBucketLocation',
			's3:GetBucketAcl',
			's3:GetObjectAcl',
			's3:ListBucketVersions',
		],
		write: [
			's3:PutObject',
			's3:DeleteObject',
			's3:PutBucketAcl',
			's3:PutObjectAcl',
			's3:DeleteBucket',
		],
	},
	secretsManager: {
		read: ['secretsmanager:GetSecretValue', 'secretsmanager:DescribeSecret', 'secretsmanager:ListSecrets'],
		write: ['secretsmanager:CreateSecret', 'secretsmanager:UpdateSecret', 'secretsmanager:DeleteSecret'],
	},
	ssm: {
		read: ['ssm:GetParameter', 'ssm:GetParameters', 'ssm:DescribeParameters', 'ssm:ListParameters'],
		write: ['ssm:PutParameter', 'ssm:DeleteParameter', 'ssm:DeleteParameters', 'ssm:UpdateParameter'],
	},
}
